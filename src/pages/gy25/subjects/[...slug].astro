---
import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';

export async function getStaticPaths() {
  const subjects = await getCollection('gy25-subjects');
  return subjects.map(subject => ({
    params: { slug: subject.data.code.toLowerCase() },
    props: { subject }
  }));
}

const { subject } = Astro.props;
---

<Layout title={`${subject.data.name} - GY25`}>
  <main class="max-w-4xl mx-auto px-4 py-12">
    <a href="/gy25" class="text-blue-600 hover:text-blue-800 flex items-center gap-1 mb-6">
      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
      </svg>
      Tillbaka till ämnen
    </a>

    <!-- Section 1: Basic Info -->
    <div class="bg-white rounded-lg shadow-sm mb-6">
      <button 
        class="section-toggle w-full p-6 flex justify-between items-center"
        aria-expanded="true"
        data-section="basic-info"
      >
        <h2 class="text-2xl font-bold text-gray-900">Ämnesinformation</h2>
        <svg class="w-6 h-6 transform transition-transform rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
        </svg>
      </button>
      <div class="section-content p-6 pt-0" data-section="basic-info">
        <div class="space-y-4">
          <div>
            <h3 class="text-sm font-semibold text-gray-500">Ämnesnamn</h3>
            <p class="text-lg text-gray-900">{subject.data.name}</p>
          </div>
          <div>
            <h3 class="text-sm font-semibold text-gray-500">Ämneskod</h3>
            <p class="text-lg font-mono text-gray-900">{subject.data.code}</p>
          </div>
          {subject.data.categories && (
            <div>
              <h3 class="text-sm font-semibold text-gray-500">Kategorier</h3>
              <ul class="mt-2 flex flex-wrap gap-2">
                {subject.data.categories.map((category) => (
                  <li class="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm">
                    {category.name}
                  </li>
                ))}
              </ul>
            </div>
          )}
        </div>
      </div>
    </div>

    <!-- Section 2: Description -->
    {subject.data.description && (
      <div class="bg-white rounded-lg shadow-sm mb-6">
        <button 
          class="section-toggle w-full p-6 flex justify-between items-center"
          aria-expanded="false"
          data-section="description"
        >
          <h2 class="text-2xl font-bold text-gray-900">Beskrivning</h2>
          <svg class="w-6 h-6 transform transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </button>
        <div class="section-content hidden p-6 pt-0" data-section="description">
          <div class="prose max-w-none" set:html={subject.data.description} />
        </div>
      </div>
    )}

    <!-- Section 3: Purpose -->
    {subject.data.purpose && (
      <div class="bg-white rounded-lg shadow-sm mb-6">
        <button 
          class="section-toggle w-full p-6 flex justify-between items-center"
          aria-expanded="false"
          data-section="purpose"
        >
          <h2 class="text-2xl font-bold text-gray-900">Syfte</h2>
          <svg class="w-6 h-6 transform transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </button>
        <div class="section-content hidden p-6 pt-0" data-section="purpose">
          <div class="prose max-w-none" set:html={subject.data.purpose} />
        </div>
      </div>
    )}

    <!-- Section 4: Courses -->
    {subject.data.courses && subject.data.courses.length > 0 && (
      <div class="bg-white rounded-lg shadow-sm mb-6">
        <button 
          class="section-toggle w-full p-6 flex justify-between items-center"
          aria-expanded="false"
          data-section="courses"
        >
          <h2 class="text-2xl font-bold text-gray-900">Nivåer</h2>
          <svg class="w-6 h-6 transform transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </button>
        <div class="section-content hidden p-6 pt-0" data-section="courses">
          <div class="space-y-8">
            {subject.data.courses.map((course) => (
              <div class="border-b border-gray-200 pb-8 last:border-b-0 last:pb-0">
                <div class="flex justify-between items-start mb-4">
                  <div>
                    <h3 class="text-xl font-semibold text-gray-900">{course.name}</h3>
                    <p class="text-gray-600 font-mono">{course.code}</p>
                  </div>
                  {course.points && (
                    <span class="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm">
                      {course.points} poäng
                    </span>
                  )}
                </div>
                {course.description && (
                  <div class="prose max-w-none mb-4" set:html={course.description} />
                )}
                {course.centralContent && (
                  <div>
                    {course.centralCntHeading && (
                      <h4 class="text-lg font-semibold text-gray-900 mb-2" set:html={course.centralCntHeading} />
                    )}
                    <div class="prose max-w-none" set:html={course.centralContent.text} />
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </div>
    )}

    <!-- Section 5: Knowledge Requirements -->
    {subject.data.knowledgeRequirements && subject.data.knowledgeRequirements.length > 0 && (
      <div class="bg-white rounded-lg shadow-sm">
        <button 
          class="section-toggle w-full p-6 flex justify-between items-center"
          aria-expanded="false"
          data-section="knowledge-requirements"
        >
          <h2 class="text-2xl font-bold text-gray-900">Betygskriterier</h2>
          <svg class="w-6 h-6 transform transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </button>
        <div class="section-content hidden p-6 pt-0" data-section="knowledge-requirements">
          {subject.data.knowledgeReqsHeading && (
            <div class="prose max-w-none mb-6" set:html={subject.data.knowledgeReqsHeading} />
          )}
          <div class="space-y-8">
            {subject.data.knowledgeRequirements.map((req) => (
              <div class="prose max-w-none" set:html={req.text} />
            ))}
          </div>
        </div>
      </div>
    )}
  </main>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const toggleButtons = document.querySelectorAll('.section-toggle');
    
    toggleButtons.forEach(button => {
      button.addEventListener('click', () => {
        const isExpanded = button.getAttribute('aria-expanded') === 'true';
        const sectionId = button.getAttribute('data-section');
        const content = document.querySelector(`.section-content[data-section="${sectionId}"]`);
        const icon = button.querySelector('svg');
        
        button.setAttribute('aria-expanded', !isExpanded);
        content.classList.toggle('hidden');
        icon.style.transform = isExpanded ? '' : 'rotate(180deg)';
      });
    });
  });
</script>

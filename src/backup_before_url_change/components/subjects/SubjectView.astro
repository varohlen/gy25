---
import type { CollectionEntry } from 'astro:content';

interface Props {
  subject: CollectionEntry<'gy25-subjects'>;
  showDescription?: boolean;
  showPurpose?: boolean;
  showCourses?: boolean;
  showKnowledgeRequirements?: boolean;
}

const { 
  subject,
  showDescription = true,
  showPurpose = true,
  showCourses = true,
  showKnowledgeRequirements = true
} = Astro.props;

function getSubjectColor() {
  const categories = subject.data.categories?.map(c => c.name.toLowerCase()) || [];
  if (categories.includes('yrkesämne')) {
    return 'bg-blue-50';       // Light blue
  } else if (categories.includes('vissa ämne')) {
    return 'bg-orange-50';    // Light peach
  } else {
    return 'bg-emerald-50';   // Soft emerald
  }
}
---

<div class="max-w-4xl mx-auto px-4">
  <!-- Section 1: Subject Title and Basic Info -->
  <div class="bg-white rounded-lg shadow-sm mb-6">
    <button 
      class="section-toggle w-full p-6 flex justify-between items-center"
      aria-expanded="true"
      data-section="basic-info"
    >
      <div class="flex items-baseline gap-4">
        <h1 class="text-2xl font-bold text-gray-900">{subject.data.name}</h1>
        <span class="text-lg font-mono text-gray-600">{subject.data.code}</span>
      </div>
      <svg class="w-6 h-6 transform transition-transform rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
      </svg>
    </button>
    <div class="section-content p-6 pt-0" data-section="basic-info">
      <div class="space-y-6">
        {subject.data.description && showDescription && (
          <div class="prose max-w-none" set:html={subject.data.description} />
        )}

        {subject.data.categories && (
          <div>
            <h3 class="text-sm font-semibold text-gray-500 mb-2">Kategorier</h3>
            <div class="flex flex-wrap gap-2">
              {subject.data.categories.map((category) => (
                <span class="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm">
                  {category.name}
                </span>
              ))}
            </div>
          </div>
        )}
      </div>
    </div>
  </div>

  <!-- Section 2: Purpose -->
  {showPurpose && subject.data.purpose && (
    <div class="bg-white rounded-lg shadow-sm mb-6">
      <button 
        class="section-toggle w-full p-6 flex justify-between items-center"
        aria-expanded="true"
        data-section="purpose"
      >
        <h2 class="text-2xl font-bold text-gray-900">Syfte</h2>
        <svg class="w-6 h-6 transform transition-transform rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
        </svg>
      </button>
      <div class="section-content p-6 pt-0" data-section="purpose">
        <div class="prose max-w-none [&_p]:mb-6 [&_ul]:list-disc [&_ul]:pl-8 [&_ul]:mb-6 [&_ul]:mt-6 [&_li]:mb-3 [&_li]:pl-2" set:html={subject.data.purpose?.split('<h3>Nivåer i ämnet')[0] || ''} />
      </div>
    </div>
  )}

<!-- Section 3: Levels -->
{subject.data.courses && subject.data.courses.length > 0 && showCourses && (
  <div class="bg-white rounded-lg shadow-sm mb-6">
    <button 
      class="section-toggle w-full p-6 flex justify-between items-center"
      aria-expanded="true"
      data-section="courses"
    >
      <h2 class="text-2xl font-bold text-gray-900">Nivåer</h2>
      <svg class="w-6 h-6 transform transition-transform rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
      </svg>
    </button>
    <div class="section-content p-6 pt-0" data-section="courses">
      <div class="space-y-6">
        <!-- Section 3.1: Overview -->
        <div class="bg-gray-50 rounded-lg">
          <button 
            class="section-toggle w-full p-4 flex justify-between items-center"
            aria-expanded="true"
            data-section="levels-overview"
          >
            <h3 class="text-xl font-semibold text-gray-900">Nivåer i ämnet</h3>
            <svg class="w-5 h-5 transform transition-transform rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
          <div class="section-content p-4 pt-0" data-section="levels-overview">
            <div class="prose max-w-none [&_ul]:list-disc [&_ul]:pl-8 [&_ul]:space-y-4 [&_li]:pl-2 [&_li]:mb-3">
              <ul>
                <div set:html={subject.data.purpose?.split('<h3>Nivåer i ämnet')[1]?.split('<ul>')[1]?.split('</ul>')[0] || ''} />
              </ul>
            </div>
          </div>
        </div>

        <!-- Section 3.2+: Individual Courses -->
        {subject.data.courses.map((course) => (
          <div 
            id={course.code.toLowerCase().replace(/\s+/g, '-')}
            class="mb-8 last:mb-0"
          >
            <button 
              class="section-toggle w-full p-4 flex justify-between items-center"
              aria-expanded="true"
              data-section={`course-${course.code}`}
            >
              <div class="flex items-baseline gap-4">
                <a 
                  href={`/gy25/courses/${subject.data.code.toLowerCase()}/${course.code.toLowerCase()}`}
                  class="text-xl font-semibold text-gray-900 hover:text-blue-600"
                >
                  {course.name}
                </a>
                <span class="text-gray-600 font-mono">{course.code}</span>
              </div>
              <div class="flex items-center gap-4">
                {course.points && (
                  <span class="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm">
                    {course.points} poäng
                  </span>
                )}
                <svg class="w-5 h-5 transform transition-transform rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
              </div>
            </button>
            <div class="section-content p-4 pt-0" data-section={`course-${course.code}`}>
              <div class="space-y-6">
                {course.description && (
                  <div class="prose max-w-none" set:html={course.description} />
                )}
                {course.centralContent && (
                  <div class="section-content p-6 pt-0" data-section="central-content"> 
                    <div class="prose max-w-none [&_p]:mb-6 [&_ul]:list-disc [&_ul]:pl-8 [&_ul]:mb-6 [&_li]:mb-3 [&_li]:pl-2" set:html={course.centralContent.text?.replace('centrala innehåll:', '<strong>centrala innehåll:</strong>') || ''} />
                  </div>
                )}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
)}

  <!-- Section 4: Knowledge Requirements -->
  {subject.data.knowledgeRequirements && subject.data.knowledgeRequirements.length > 0 && showKnowledgeRequirements && (
    <div class="bg-white rounded-lg shadow-sm mb-6">
      <button 
        class="section-toggle w-full p-6 flex justify-between items-center"
        aria-expanded="true"
        data-section="knowledge-reqs"
      >
        <h2 class="text-2xl font-bold text-gray-900">Betygskriterier</h2>
        <svg class="w-6 h-6 transform transition-transform rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
        </svg>
      </button>
      <div class="section-content p-6 pt-0" data-section="knowledge-reqs">
        {subject.data.knowledgeRequirements.map((req) => (
          <div class="prose max-w-none mb-8 last:mb-0" set:html={req.text} />
        ))}
      </div>
    </div>
  )}
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const toggleButtons = document.querySelectorAll('.section-toggle');
    
    toggleButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        // Type assertion for event target
        const target = e.target as HTMLElement;
        if (target.tagName === 'A' || target.closest('a')) {
          return;
        }

        const isExpanded = button.getAttribute('aria-expanded') === 'true';
        button.setAttribute('aria-expanded', (!isExpanded).toString());
        
        const sectionId = button.getAttribute('data-section');
        const content = document.querySelector(`.section-content[data-section="${sectionId}"]`);
        const chevron = button.querySelector('svg');
        
        if (content && chevron) {
          (content as HTMLElement).style.display = isExpanded ? 'none' : 'block';
          // Double type assertion to safely convert SVG to HTMLElement
          const chevronElement = chevron as unknown as HTMLElement;
          chevronElement.style.transform = isExpanded ? 'rotate(0deg)' : 'rotate(180deg)';
        }
      });
    });
  });
</script>

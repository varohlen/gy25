---
import { getCollection, type CollectionEntry } from 'astro:content';
import GY25Layout from '../../../layouts/GY25Layout.astro';

const subjects = await getCollection('gy25-subjects');

// Sort subjects by name
subjects.sort((a, b) => a.data.name.localeCompare(b.data.name));

// Function to determine card color based on subject type
function getCardColor(subject: CollectionEntry<'gy25-subjects'>) {
  const categories = subject.data.categories?.map((c: { name: string }) => c.name.toLowerCase()) || [];
  if (categories.includes('yrkesämne')) {
    return 'bg-blue-50 hover:bg-blue-100';       // Light blue (switched from emerald)
  } else if (categories.includes('vissa ämne')) {
    return 'bg-orange-50 hover:bg-orange-100';   // Light peach
  } else {
    return 'bg-emerald-50 hover:bg-emerald-100'; // Soft emerald (switched from blue)
  }
}
---

<GY25Layout 
  activeView="subjects"
  searchPlaceholder="Sök på ämne eller ämneskod..."
>
  <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
    {subjects.map((subject) => (
      <div 
        class={`rounded-lg shadow-sm p-6 hover:shadow-md transition-shadow h-full flex flex-col subject-card ${getCardColor(subject)}`}
        data-searchable={`${subject.data.name.toLowerCase()} ${subject.data.code.toLowerCase()}`}
      >
        <div class="flex justify-between items-start mb-4">
          <div class="flex-grow">
            <div class="flex items-baseline gap-3 mb-1">
              <a 
                href={`/gy25/subjects/${subject.data.code.toLowerCase()}`}
                class="group"
              >
                <h2 class="text-lg font-semibold text-gray-900 group-hover:text-blue-600">
                  {subject.data.name}
                </h2>
              </a>
              <span class="text-sm font-mono text-gray-600">{subject.data.code}</span>
            </div>
            {subject.data.courses && (
              <p class="text-sm text-gray-600">
                {subject.data.courses.length} nivå{subject.data.courses.length !== 1 ? 'er' : ''}
              </p>
            )}
          </div>
          <div class="flex gap-2">
            <button 
              class="expand-btn p-2 hover:bg-white/50 rounded-lg transition-colors"
              aria-label="Visa mer information"
            >
              <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
              </svg>
            </button>
            <a 
              href={`/gy25/subjects/${subject.data.code.toLowerCase()}`}
              class="p-2 hover:bg-white/50 rounded-lg transition-colors"
              aria-label="Gå till ämnesdetaljer"
            >
              <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </a>
          </div>
        </div>

        <div class="expandable-content hidden">
          {subject.data.description && (
            <div class="prose prose-sm max-w-none mb-4" set:html={subject.data.description} />
          )}
          {subject.data.courses && subject.data.courses.length > 0 && (
            <div class="space-y-1 mb-4">
              <h3 class="text-sm font-medium text-gray-900 mb-2">Nivåer</h3>
              <div class="flex flex-col gap-1">
                {subject.data.courses.map((course) => (
                  <a 
                    href={`/gy25/courses/${subject.data.code.toLowerCase()}/${course.code.toLowerCase()}`}
                    class="text-sm text-gray-600 hover:text-blue-600 flex items-center justify-between group"
                  >
                    <span>{course.name}</span>
                    <span class="font-mono ml-2 text-gray-400 group-hover:text-blue-600">{course.code}</span>
                  </a>
                ))}
              </div>
            </div>
          )}
          {subject.data.categories && (
            <div class="flex flex-wrap gap-2">
              {subject.data.categories.map((category) => (
                <span class="px-3 py-1 bg-white/75 rounded-full text-sm font-medium">
                  {category.name}
                </span>
              ))}
            </div>
          )}
        </div>
      </div>
    ))}
  </div>
</GY25Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Expand/collapse functionality
    const expandButtons = document.querySelectorAll('.expand-btn');
    
    expandButtons.forEach((button) => {
      button.addEventListener('click', () => {
        const card = button.closest('.subject-card');
        const content = card?.querySelector('.expandable-content');
        const icon = button.querySelector('svg');
        
        content?.classList.toggle('hidden');
        icon?.classList.toggle('rotate-180');
      });
    });
  });
</script>